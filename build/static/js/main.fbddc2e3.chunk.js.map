{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Persons","person","persons","setPersons","setMessage","setMessageType","name","number","onClick","event","console","log","preventDefault","window","confirm","personService","then","response","filter","setTimeout","location","reload","catch","error","handleClick","PersonForm","newName","newNumber","setNewName","setNewNumber","onSubmit","personObject","map","includes","updateId","data","concat","value","onChange","target","type","Filter","setFilter","setShowAll","length","Notification","message","messageType","className","App","useState","showAll","useEffect","personsToShow","toLowerCase","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbddc2e3.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://thawing-citadel-50396.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst del = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  del: del \n}","import React from 'react'\nimport personService from '../services/persons'\n\nconst Persons = ({ person, persons, setPersons, setMessage, setMessageType }) => {\n  \n  const handleClick = (event, person) => {\n    console.log('delete button clicked')\n    event.preventDefault()\n  \n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n      .del(person.id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== response.id))\n        console.log('person deleted')\n        setMessageType('success')\n        setMessage(`${person.name} deleted successfully`)\n        setTimeout(() => {          \n          setMessage(null) \n          window.location.reload(false)     \n        }, 3000)\n      })\n      .catch(error => {      \n        setMessageType('error')\n        setMessage(          \n          `Information of '${person.name}' has already been removed from server`        \n        )        \n        setTimeout(() => {          \n          setMessage(null)\n          window.location.reload(false)          \n        }, 3000)\n   \n        setPersons(persons)    \n      }) \n    }\n  }\n  \n  return (\n    <div>\n        <p>\n          {person.name} {person.number} <button onClick={(event) => handleClick(event, person)}>delete</button>\n        </p>\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({ persons, newName, newNumber, setPersons, setNewName, setNewNumber, setMessage, setMessageType }) => {\n  \n  const addPerson = (event) => {\n      event.preventDefault()\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n    \n      if (persons.map(person => person.name).includes(newName)) {       \n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n \n          const updateId = persons.filter(person => person.name === newName).map(person => person.id)\n          console.log(` id to be updated: ${updateId}`)\n\n          personService\n          .update(updateId, personObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== updateId ? person : response.data))\n            setNewName('')\n            setNewNumber('')\n            setMessageType('success')\n            setMessage(`${newName} updated successfully`)\n            setTimeout(() => {          \n              setMessage(null) \n              window.location.reload(false)     \n            }, 3000)\n            console.log(`existing person with id ${updateId} updated`)\n          })\n\n        }      \n     } else {\n        personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setMessageType('success')\n          setMessage(`${newName} created successfully`)\n          setTimeout(() => {          \n            setMessage(null) \n            window.location.reload(false)     \n          }, 3000)\n        })\n        .catch(error => {      \n          //console.log(error.response.data)\n          setMessageType('error')\n          setMessage(          \n            `${error.response.data.error}`        \n          )        \n           setTimeout(() => {          \n             setMessage(null)\n             window.location.reload(false)          \n           }, 3000)\n\n        console.log('new person added')\n        })\n      }\n  } \n    \n  const handleNameChange = (event) => {     \n        setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {       \n    setNewNumber(event.target.value)  \n  }  \n\n  return (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input \n      value={newName} \n      onChange={handleNameChange}\n      />\n    </div>\n    <div>\n      number <input \n      value={newNumber} \n      onChange={handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({ setFilter, setShowAll }) => {\n  \n    const handleFilterChange = (event) => {     \n        if (event.target.value.length > 0) {\n            setShowAll(false)\n        } else {\n            setShowAll(true)\n        }\n        setFilter(event.target.value)\n        }\n    \n    return (\n    <p>filter shown with <input \n            onChange={handleFilterChange}\n            />\n    </p>\n\n\n\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\n\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ message, setMessage] = useState(null)\n  const [ messageType, setMessageType] = useState(null)\n\n  useEffect(() => {\n    personService      \n      .getAll()      \n      .then(response => {        \n        setPersons(response.data)      \n      })  \n  }, [])\n\n  const personsToShow = showAll    \n  ? persons   \n  : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter setFilter={setFilter}\n              setShowAll={setShowAll} \n              />\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} \n                  newName={newName}\n                  newNumber={newNumber}\n                  setPersons={setPersons}\n                  setNewName={setNewName}\n                  setNewNumber={setNewNumber}\n                  setMessage={setMessage}\n                  setMessageType={setMessageType}\n      />\n      <h3>Numbers</h3>\n      {personsToShow.map(person =>\n        <Persons  key={person.name} \n                  person={person}\n                  persons={persons}\n                  setPersons={setPersons}\n                  setMessage={setMessage}\n                  setMessageType={setMessageType} />\n      )}     \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}